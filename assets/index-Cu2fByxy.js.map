{"version":3,"file":"index-Cu2fByxy.js","sources":["../../src/components/base/events.ts","../../src/components/base/api.ts","../../src/services/shop-api.ts","../../src/models/basket.ts","../../src/models/order.ts","../../src/utils/ui.ts","../../src/components/base/Component.ts","../../src/utils/format.ts","../../src/components/base/ProductCard.ts","../../src/views/CardView.ts","../../src/views/MainPageView.ts","../../src/views/ProductModalView.ts","../../src/views/BasketItemView.ts","../../src/views/BasketView.ts","../../src/components/base/Form.ts","../../src/models/OrderStep1ValidationModel.ts","../../src/views/CheckoutStep1View.ts","../../src/models/ContactValidationModel.ts","../../src/views/CheckoutStep2View.ts","../../src/views/OrderSuccessView.ts","../../src/services/modal.ts","../../src/controllers/app.ts","../../src/index.ts"],"sourcesContent":["\r\ntype EventName = string | RegExp;\r\ntype Subscriber = Function;\r\ntype EmitterEvent = {\r\n    eventName: string,\r\n    data: unknown\r\n};\r\n\r\nexport interface IEvents {\r\n    on<T extends object>(event: EventName, callback: (data: T) => void): void;\r\n    emit<T extends object>(event: string, data?: T): void;\r\n    trigger<T extends object>(event: string, context?: Partial<T>): (data: T) => void;\r\n}\r\n\r\nexport class EventEmitter implements IEvents {\r\n    _events: Map<EventName, Set<Subscriber>>;\r\n\r\n    constructor() {\r\n        this._events = new Map<EventName, Set<Subscriber>>();\r\n    }\r\n\r\n    on<T extends object>(eventName: EventName, callback: (event: T) => void) {\r\n        if (!this._events.has(eventName)) {\r\n            this._events.set(eventName, new Set<Subscriber>());\r\n        }\r\n        this._events.get(eventName)?.add(callback);\r\n    }\r\n\r\n    off(eventName: EventName, callback: Subscriber) {\r\n        if (this._events.has(eventName)) {\r\n            this._events.get(eventName)!.delete(callback);\r\n            if (this._events.get(eventName)?.size === 0) {\r\n                this._events.delete(eventName);\r\n            }\r\n        }\r\n    }\r\n\r\n    emit<T extends object>(eventName: string, data?: T) {\r\n        this._events.forEach((subscribers, name) => {\r\n            if (name === '*') subscribers.forEach(callback => callback({\r\n                eventName,\r\n                data\r\n            }));\r\n            if (name instanceof RegExp && name.test(eventName) || name === eventName) {\r\n                subscribers.forEach(callback => callback(data));\r\n            }\r\n        });\r\n    }\r\n\r\n    onAll(callback: (event: EmitterEvent) => void) {\r\n        this.on(\"*\", callback);\r\n    }\r\n\r\n    offAll() {\r\n        this._events = new Map<string, Set<Subscriber>>();\r\n    }\r\n\r\n    trigger<T extends object>(eventName: string, context?: Partial<T>) {\r\n        return (event: object = {}) => {\r\n            this.emit(eventName, {\r\n                ...(event || {}),\r\n                ...(context || {})\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n","export type ApiListResponse<T> = {\r\n\ttotal: number;\r\n\titems: T[];\r\n};\r\n\r\nexport type ApiPostMethods = 'POST' | 'PUT' | 'DELETE';\r\n\r\nexport class Api {\r\n\treadonly baseUrl: string;\r\n\tprotected options: RequestInit;\r\n\r\n\tconstructor(baseUrl: string, options: RequestInit = {}) {\r\n\t\tthis.baseUrl = baseUrl;\r\n\t\tthis.options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t...((options.headers as object) ?? {}),\r\n\t\t\t},\r\n\t\t\t...options,\r\n\t\t};\r\n\t}\r\n\r\n\tprotected async request<T>(uri: string, init: RequestInit = {}): Promise<T> {\r\n\t\tconst url = this.baseUrl + uri;\r\n\r\n\t\tconst res = await fetch(url, {\r\n\t\t\t...this.options,\r\n\t\t\t...init,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t...(this.options.headers || {}),\r\n\t\t\t\t...(init.headers || {}),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tlet error: any = { status: res.status, statusText: res.statusText };\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await res.json();\r\n\t\t\t\tif (typeof data === 'object') {\r\n\t\t\t\t\terror = { ...error, ...data };\r\n\t\t\t\t}\r\n\t\t\t} catch {}\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tif (res.status === 204) {\r\n\t\t\treturn undefined as unknown as T;\r\n\t\t}\r\n\r\n\t\treturn (await res.json()) as T;\r\n\t}\r\n\r\n\tget<T>(uri: string): Promise<T> {\r\n\t\treturn this.request<T>(uri, { method: 'GET' });\r\n\t}\r\n\r\n\tpost<T>(\r\n\t\turi: string,\r\n\t\tdata?: unknown,\r\n\t\tmethod: ApiPostMethods = 'POST'\r\n\t): Promise<T> {\r\n\t\treturn this.request<T>(uri, {\r\n\t\t\tmethod,\r\n\t\t\tbody: data === undefined ? undefined : JSON.stringify(data),\r\n\t\t});\r\n\t}\r\n}","import { Api, ApiListResponse } from '../components/base/api';\r\nimport type { IOrderRequest, IProductApi } from '../types';\r\nimport fallbackCatalog from '../data/products.json';\r\n\r\ntype Prefix = '' | '/api/weblarek' | '/api' | '/weblarek';\r\ntype Resource = '/products' | '/items' | '/catalog';\r\n\r\nfunction normalizeBase(url: string) {\r\n\treturn url.endsWith('/') ? url.slice(0, -1) : url;\r\n}\r\n\r\nexport class ShopApi extends Api {\r\n\tprivate resolved: { prefix: Prefix; resource: Resource } | null = null;\r\n\r\n\tprivate readonly prefixes: Prefix[];\r\n\tprivate readonly resources: Resource[] = ['/products', '/items', '/catalog'];\r\n\r\n\tconstructor(baseUrl: string, options: RequestInit = {}) {\r\n\t\tconst base = normalizeBase(baseUrl || '');\r\n\t\tsuper(base, options);\r\n\t\tthis.prefixes = base.endsWith('/api/weblarek')\r\n\t\t\t? ['', '/api', '/weblarek']\r\n\t\t\t: ['/api/weblarek', '', '/api', '/weblarek'];\r\n\t}\r\n\r\n\tprivate async tryCombinations<T>(\r\n\t\trunner: (uri: string) => Promise<T>\r\n\t): Promise<{ data: T; prefix: Prefix; resource: Resource }> {\r\n\t\tconst combos = this.resolved\r\n\t\t\t? [this.resolved]\r\n\t\t\t: this.prefixes.flatMap((prefix) =>\r\n\t\t\t\t\tthis.resources.map((resource) => ({ prefix, resource }))\r\n\t\t\t  );\r\n\r\n\t\tlet lastError: unknown;\r\n\r\n\t\tfor (const { prefix, resource } of combos) {\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await runner(`${prefix}${resource}`);\r\n\t\t\t\tthis.resolved = { prefix, resource };\r\n\t\t\t\treturn { data, prefix, resource };\r\n\t\t\t} catch (e: any) {\r\n\t\t\t\tlastError = e;\r\n\t\t\t\tconst status = e?.status ?? e?.code;\r\n\t\t\t\tconst msg = (e?.statusText || e?.message || '')\r\n\t\t\t\t\t.toString()\r\n\t\t\t\t\t.toLowerCase();\r\n\t\t\t\tconst notFound = status === 404 || msg.includes('not found');\r\n\t\t\t\tif (!notFound) throw e;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow lastError ?? new Error('No working API path found');\r\n\t}\r\n\r\n\tasync getProducts(): Promise<ApiListResponse<IProductApi>> {\r\n\t\ttry {\r\n\t\t\tconst { data } = await this.tryCombinations<ApiListResponse<IProductApi>>(\r\n\t\t\t\t(uri) => this.get<ApiListResponse<IProductApi>>(uri)\r\n\t\t\t);\r\n\t\t\treturn data;\r\n\t\t} catch {\r\n\t\t\treturn fallbackCatalog as ApiListResponse<IProductApi>;\r\n\t\t}\r\n\t}\r\n\tcreateOrder(\r\n\t\torder: IOrderRequest\r\n\t): Promise<{ id: string } & { total?: number }> {\r\n\t\tconst prefix = this.resolved?.prefix ?? this.prefixes[0];\r\n\t\treturn this.post<{ id: string } & { total?: number }>(\r\n\t\t\t`${prefix}/orders`,\r\n\t\t\torder,\r\n\t\t\t'POST'\r\n\t\t);\r\n\t}\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { BasketItem, IBasketState, ID, IProductApi } from '../types';\r\n\r\nexport class BasketModel {\r\n  private items: BasketItem[] = [];\r\n\r\n  constructor(private events: IEvents) {}\r\n\r\n  get state(): IBasketState {\r\n    return {\r\n      items: this.items.slice(),\r\n      total: this.items.reduce((sum, it) => sum + (it.price ?? 0), 0),\r\n    };\r\n  }\r\n\r\n  has(id: ID) {\r\n    return this.items.some(it => it.id === id);\r\n  }\r\n\r\n  add(product: IProductApi) {\r\n    if (this.has(product.id)) return;\r\n    const item: BasketItem = { id: product.id, title: product.title, price: product.price };\r\n    this.items.push(item);\r\n    this.emitUpdated();\r\n  }\r\n\r\n  remove(id: ID) {\r\n    this.items = this.items.filter(it => it.id !== id);\r\n    this.emitUpdated();\r\n  }\r\n\r\n  clear() {\r\n    this.items = [];\r\n    this.emitUpdated();\r\n  }\r\n\r\n  private emitUpdated() {\r\n    this.events.emit('basket:updated', { state: this.state });\r\n  }\r\n}","import type { IEvents } from '../components/base/events';\r\nimport type {\r\n  IOrderPart1,\r\n  IOrderPart2,\r\n  IOrderRequest,\r\n  ID,\r\n  IValidationResult,\r\n  FormErrors,\r\n  PaymentMethod\r\n} from '../types';\r\n\r\nexport class OrderModel {\r\n  step1: IOrderPart1 = { payment: null, address: '' };\r\n  step2: IOrderPart2 = { email: '', phone: '' };\r\n\r\n  constructor(private events: IEvents) {}\r\n\r\n  setStep1(part: Partial<IOrderPart1>) {\r\n    this.step1 = { ...this.step1, ...part };\r\n    const res = this.validateStep1();\r\n    this.publishValidation(1, res);\r\n    return res;\r\n  }\r\n\r\n  setStep2(part: Partial<IOrderPart2>) {\r\n    this.step2 = { ...this.step2, ...part };\r\n    const res = this.validateStep2();\r\n    this.publishValidation(2, res);\r\n    return res;\r\n  }\r\n\r\n  toRequest(items: ID[], total: number): IOrderRequest {\r\n    return {\r\n      ...this.step1,\r\n      ...this.step2,\r\n      items,\r\n      total,\r\n    } as IOrderRequest;\r\n  }\r\n\r\n  reset() {\r\n    this.step1 = { payment: null, address: '' };\r\n    this.step2 = { email: '', phone: '' };\r\n  }\r\n\r\n  private publishValidation(step: 1 | 2, res: IValidationResult<IOrderPart1 & IOrderPart2>) {\r\n    this.events.emit('form:errors', { errors: res.errors });\r\n    this.events.emit('form:valid', { step, isValid: res.valid });\r\n  }\r\n\r\n  private validateStep1(): IValidationResult<IOrderPart1 & IOrderPart2> {\r\n    const errors: FormErrors<IOrderPart1 & IOrderPart2> = {};\r\n    if (!this.step1.address?.trim()) errors.address = 'Укажите адрес';\r\n    if (!this.step1.payment) errors.payment = 'Выберите способ оплаты';\r\n    return { valid: Object.keys(errors).length === 0, errors };\r\n  }\r\n\r\n  private validateStep2(): IValidationResult<IOrderPart1 & IOrderPart2> {\r\n    const errors: FormErrors<IOrderPart1 & IOrderPart2> = {};\r\n    if (!this.step2.email?.trim()) errors.email = 'Укажите email';\r\n    if (!this.step2.phone?.trim()) errors.phone = 'Укажите телефон';\r\n    return { valid: Object.keys(errors).length === 0, errors };\r\n  }\r\n}","export function cloneTemplate<T extends HTMLElement = HTMLElement>(id: string): T {\r\n  const tpl = document.getElementById(id) as HTMLTemplateElement | null;\r\n  if (!tpl) throw new Error(`Не найден template#${id}`);\r\n  return tpl.content.firstElementChild!.cloneNode(true) as T;\r\n}\r\n\r\nexport function ensure<T extends Element>(el: T | null, msg: string): T {\r\n  if (!el) throw new Error(msg);\r\n  return el;\r\n}\r\n\r\nexport function setDisabled(btn: HTMLButtonElement, disabled: boolean) {\r\n  btn.toggleAttribute('disabled', disabled);\r\n}","import { cloneTemplate, setDisabled } from '../../utils/ui';\r\n\r\nexport abstract class Component {\r\n  readonly root: HTMLElement;\r\n\r\n  constructor(templateId: string) {\r\n    this.root = cloneTemplate(templateId);\r\n  }\r\n\r\n  protected setTextContent(selector: string, text: string): void {\r\n    const element = this.root.querySelector(selector);\r\n    if (element) {\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  protected setDisplay(selector: string, display: 'block' | 'none' | 'flex' | 'grid'): void {\r\n    const element = this.root.querySelector(selector) as HTMLElement;\r\n    if (element) {\r\n      element.style.display = display;\r\n    }\r\n  }\r\n\r\n  protected setButtonDisabled(selector: string, disabled: boolean): void {\r\n    const button = this.root.querySelector(selector) as HTMLButtonElement;\r\n    if (button) {\r\n      setDisabled(button, disabled);\r\n    }\r\n  }\r\n\r\n  protected toggleClass(selector: string, className: string, condition: boolean): void {\r\n    const element = this.root.querySelector(selector);\r\n    if (element) {\r\n      element.classList.toggle(className, condition);\r\n    }\r\n  }\r\n\r\n  protected addEventListener(selector: string, event: string, handler: (e?: Event) => void): void {\r\n    const element = this.root.querySelector(selector);\r\n    if (element) {\r\n      element.addEventListener(event, handler);\r\n    }\r\n  }\r\n\r\n  protected setAttribute(selector: string, attribute: string, value: string): void {\r\n    const element = this.root.querySelector(selector);\r\n    if (element) {\r\n      element.setAttribute(attribute, value);\r\n    }\r\n  }\r\n\r\n  protected setInputValue(selector: string, value: string): void {\r\n    const input = this.root.querySelector(selector) as HTMLInputElement;\r\n    if (input) {\r\n      input.value = value;\r\n    }\r\n  }\r\n\r\n  protected getInputValue(selector: string): string {\r\n    const input = this.root.querySelector(selector) as HTMLInputElement;\r\n    return input ? input.value : '';\r\n  }\r\n\r\n  protected hasClass(selector: string, className: string): boolean {\r\n    const element = this.root.querySelector(selector);\r\n    return element ? element.classList.contains(className) : false;\r\n  }\r\n}\r\n","import type { IProductApi } from '../types/index';\r\n\r\nexport function formatPrice(price: IProductApi['price']): string {\r\n  if (price == null) return 'Недоступно';\r\n  return `${new Intl.NumberFormat('ru-RU').format(price)} синапсов`;\r\n}\r\n","import type { IProductApi } from '../../types';\r\nimport type { IEvents } from './events';\r\nimport { Component } from './Component';\r\nimport { formatPrice } from '../../utils/format';\r\n\r\nexport abstract class ProductCard extends Component {\r\n  protected currentProduct: IProductApi | null = null;\r\n\r\n  constructor(templateId: string, protected events: IEvents) {\r\n    super(templateId);\r\n  }\r\n\r\n  protected setProductInfo(product: IProductApi): void {\r\n    this.currentProduct = product;\r\n    this.setTextContent('.card__title', product.title);\r\n    this.setTextContent('.card__price', formatPrice(product.price));\r\n    this.setTextContent('.card__category', product.category);\r\n    \r\n    this.setCategoryClass(product.category);\r\n    \r\n    this.setImage('.card__image', product.image, product.title);\r\n  }\r\n\r\n  protected setCategoryClass(category: string): void {\r\n    const categoryClass = this.getCategoryClass(category);\r\n    const categoryEl = this.root.querySelector('.card__category');\r\n    if (categoryEl) {\r\n      categoryEl.className = `card__category card__category_${categoryClass}`;\r\n    }\r\n  }\r\n\r\n  protected setImage(selector: string, src: string, alt: string): void {\r\n    const imageEl = this.root.querySelector(selector) as HTMLImageElement;\r\n    if (imageEl) {\r\n      imageEl.src = src;\r\n      imageEl.alt = alt;\r\n    }\r\n  }\r\n\r\n  protected getCategoryClass(category: string): string {\r\n    const categoryMap: Record<string, string> = {\r\n      'софт-скил': 'soft',\r\n      'другое': 'other',\r\n      'дополнительное': 'additional',\r\n      'кнопка': 'button',\r\n      'хард-скил': 'hard'\r\n    };\r\n    return categoryMap[category] || 'other';\r\n  }\r\n\r\n  protected getCurrentProduct(): IProductApi | null {\r\n    return this.currentProduct;\r\n  }\r\n}\r\n","import type { IProductApi } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { ProductCard } from '../components/base/ProductCard';\r\n\r\nexport class CardView extends ProductCard {\r\n  constructor(events: IEvents) {\r\n    super('card-catalog', events);\r\n  }\r\n\r\n  render(product: IProductApi): HTMLElement {\r\n    this.setProductInfo(product);\r\n    \r\n    return this.root;\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { IProductApi, EventPayloadMap } from '../types';\r\nimport { CardView } from './CardView';\r\n\r\nexport class MainPageView {\r\n  private root: HTMLElement;\r\n  private events: IEvents;\r\n  private listEl: HTMLElement;\r\n  private basketBtn: HTMLButtonElement;\r\n  private counterEl: HTMLElement;\r\n\r\n  constructor(root: HTMLElement, events: IEvents) {\r\n    this.root = root;\r\n    this.events = events;\r\n    this.listEl = root;\r\n    this.basketBtn = document.querySelector('.header__basket') as HTMLButtonElement;\r\n    this.counterEl = document.querySelector('.header__basket-counter') as HTMLElement;\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    this.basketBtn.addEventListener('click', () => this.events.emit('basket:open'));\r\n\r\n    this.listEl.addEventListener('click', (e) => {\r\n      const card = (e.target as HTMLElement).closest('.card');\r\n      if (card) {\r\n        const productId = card.getAttribute('data-product-id');\r\n        if (productId) {\r\n          this.events.emit('product:select', { id: productId });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.events.on('items:change', (payload) => {\r\n      const { items } = payload as EventPayloadMap['items:change'];\r\n      this.render(items);\r\n    });\r\n\r\n    this.events.on('basket:updated', (payload) => {\r\n      const { state } = payload as EventPayloadMap['basket:updated'];\r\n      this.counterEl.textContent = String(state.items.length);\r\n    });\r\n  }\r\n\r\n  private render(items: IProductApi[]): void {\r\n    const fragments = items.map((product) => {\r\n      const cardView = new CardView(this.events);\r\n      const element = cardView.render(product);\r\n      element.setAttribute('data-product-id', product.id);\r\n      return element;\r\n    });\r\n    this.listEl.replaceChildren(...fragments);\r\n  }\r\n}\r\n","import type { IProductApi } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { ProductCard } from '../components/base/ProductCard';\r\n\r\nexport class ProductModalView extends ProductCard {\r\n  private buyBtn: HTMLButtonElement;\r\n\r\n  constructor(events: IEvents) {\r\n    super('card-preview', events);\r\n    this.buyBtn = this.root.querySelector('.card__button') as HTMLButtonElement;\r\n  }\r\n\r\n  render(product: IProductApi, inCart: boolean): HTMLElement {\r\n    this.ensureMediaWrapper();\r\n\r\n    this.setProductInfo(product);\r\n    \r\n    this.setTextContent('.card__text', product.description || '');\r\n\r\n    this.updateButton(product.price === null, inCart);\r\n\r\n    return this.root;\r\n  }\r\n\r\n  private ensureMediaWrapper(): void {\r\n    const media = this.root.querySelector('.card__media') as HTMLElement | null;\r\n    if (!media) {\r\n      const img = this.root.querySelector('.card__image') as HTMLImageElement | null;\r\n      if (img) {\r\n        const wrap = document.createElement('div');\r\n        wrap.className = 'card__media';\r\n        img.replaceWith(wrap);\r\n        wrap.appendChild(img);\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateButton(isPriceless: boolean, inCart: boolean): void {\r\n    if (isPriceless) {\r\n      this.setTextContent('.card__button', 'Недоступно');\r\n      this.setButtonDisabled('.card__button', true);\r\n      this.buyBtn.onclick = null;\r\n    } else {\r\n      this.setButtonDisabled('.card__button', false);\r\n      this.setupButtonHandlers(inCart);\r\n    }\r\n  }\r\n\r\n  private setupButtonHandlers(inCart: boolean): void {\r\n    if (inCart) {\r\n      this.setTextContent('.card__button', 'Удалить из корзины');\r\n      this.buyBtn.onclick = () => {\r\n        const product = this.getCurrentProduct();\r\n        if (!product) return;\r\n        this.events.emit('basket:remove', { id: product.id });\r\n        this.setupButtonHandlers(false);\r\n      };\r\n    } else {\r\n      this.setTextContent('.card__button', 'Купить');\r\n      this.buyBtn.onclick = () => {\r\n        const product = this.getCurrentProduct();\r\n        if (!product) return;\r\n        this.events.emit('basket:add', { id: product.id });\r\n        this.setupButtonHandlers(true);\r\n      };\r\n    }\r\n  }\r\n}\r\n","import type { BasketItem } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { Component } from '../components/base/Component';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class BasketItemView extends Component {\r\n  constructor(private events: IEvents) {\r\n    super('card-basket');\r\n  }\r\n\r\n  render(item: BasketItem, index: number): HTMLElement {\r\n    this.setTextContent('.basket__item-index', String(index + 1));\r\n    this.setTextContent('.basket__item-title', item.title);\r\n    this.setTextContent('.basket__item-price', formatPrice(item.price));\r\n    \r\n    this.addEventListener('.basket__item-delete', 'click', () => {\r\n      this.events.emit('basket:remove', { id: item.id });\r\n    });\r\n    \r\n    return this.root;\r\n  }\r\n}\r\n","import type { BasketItem } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { Component } from '../components/base/Component';\r\nimport { formatPrice } from '../utils/format';\r\nimport { BasketItemView } from './BasketItemView';\r\n\r\nexport class BasketView extends Component {\r\n  private listEl: HTMLElement;\r\n  private totalEl: HTMLElement;\r\n  private buttonEl: HTMLButtonElement;\r\n  private emptyEl: HTMLElement;\r\n\r\n  constructor(private events: IEvents) {\r\n    super('basket');\r\n    this.listEl = this.root.querySelector('.basket__list')!;\r\n    this.totalEl = this.root.querySelector('.basket__price')!;\r\n    this.buttonEl = this.root.querySelector('.basket__button') as HTMLButtonElement;\r\n    this.emptyEl = this.root.querySelector('.basket__empty-text') as HTMLElement;\r\n\r\n    this.addEventListener('.basket__button', 'click', () => \r\n      this.events.emit('order:open-step1')\r\n    );\r\n  }\r\n\r\n  render(items: BasketItem[], total: number): HTMLElement {\r\n    const isEmpty = items.length === 0;\r\n    \r\n    const itemViews = items.map((item, idx) => \r\n      new BasketItemView(this.events).render(item, idx)\r\n    );\r\n    \r\n    this.listEl.replaceChildren(...itemViews);\r\n    this.setTextContent('.basket__price', formatPrice(total));\r\n    this.setDisplay('.basket__empty-text', isEmpty ? 'block' : 'none');\r\n    this.setDisplay('.basket__list', isEmpty ? 'none' : 'flex');\r\n    this.setButtonDisabled('.basket__button', isEmpty);\r\n\r\n    return this.root;\r\n  }\r\n}","import { Component } from './Component';\r\nimport type { IEvents } from './events';\r\n\r\nexport abstract class Form<T = any> extends Component {\r\n  protected submitBtn: HTMLButtonElement;\r\n  protected errorsEl: HTMLElement;\r\n  protected isFormValid: boolean = false;\r\n\r\n  constructor(templateId: string, protected events: IEvents) {\r\n    super(templateId);\r\n    this.submitBtn = this.root.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\r\n    this.errorsEl = this.root.querySelector('.form__errors') as HTMLElement;\r\n\r\n    this.setupFormEventListeners();\r\n    this.setupValidationListeners();\r\n  }\r\n\r\n  private setupFormEventListeners(): void {\r\n    if (this.submitBtn) {\r\n      this.submitBtn.addEventListener('click', (e) => {\r\n        e?.preventDefault();\r\n        this.handleSubmit();\r\n      });\r\n    }\r\n\r\n    this.setupInputChangeListeners();\r\n  }\r\n\r\n  private setupValidationListeners(): void {\r\n    this.events.on('form:validation:result', (data: { isValid: boolean; errors: string[] }) => {\r\n      this.updateFormState(data);\r\n    });\r\n  }\r\n\r\n  private setupInputChangeListeners(): void {\r\n    const inputs = this.root.querySelectorAll('input');\r\n    inputs.forEach(input => {\r\n      input.addEventListener('input', () => {\r\n        this.onInputChange(input);\r\n      });\r\n      \r\n      input.addEventListener('select', (e) => {\r\n        e.stopPropagation();\r\n      });\r\n      \r\n      input.addEventListener('focus', (e) => {\r\n        e.stopPropagation();\r\n      });\r\n    });\r\n  }\r\n\r\n  private onInputChange(input: HTMLInputElement): void {\r\n    const name = input.name;\r\n    const value = input.value;\r\n    \r\n    this.emitFieldChange(name, value);\r\n  }\r\n\r\n  protected abstract emitFieldChange(fieldName: string, value: string): void;\r\n\r\n  protected handleSubmit(): void {\r\n    if (this.isFormValid) {\r\n      this.onSubmit();\r\n    } else {\r\n      this.requestValidation();\r\n    }\r\n  }\r\n\r\n  protected abstract requestValidation(): void;\r\n\r\n  private updateFormState(validation: { isValid: boolean; errors: string[] }): void {\r\n    this.isFormValid = validation.isValid;\r\n\r\n    if (this.submitBtn) {\r\n      this.submitBtn.disabled = !validation.isValid;\r\n    }\r\n\r\n    this.setTextContent('.form__errors', validation.errors.join(', '));\r\n  }\r\n\r\n  protected abstract onSubmit(): void;\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { IOrderPart1, PaymentMethod } from '../types';\r\n\r\nexport class OrderStep1ValidationModel {\r\n  private address: string = '';\r\n  private payment: PaymentMethod = null;\r\n\r\n  constructor(private events: IEvents) {\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    this.events.on('form:validate:step1', () => {\r\n      this.validateAndEmit();\r\n    });\r\n  }\r\n\r\n  setAddress(address: string): void {\r\n    this.address = address;\r\n    this.validateAndEmit();\r\n  }\r\n\r\n  setPayment(payment: PaymentMethod): void {\r\n    this.payment = payment;\r\n    this.validateAndEmit();\r\n  }\r\n\r\n  private validateAndEmit(): void {\r\n    const validation = this.validateStep1();\r\n    \r\n    this.events.emit('form:validation:result', {\r\n      isValid: validation.isValid,\r\n      errors: validation.errors,\r\n      data: validation.data\r\n    });\r\n  }\r\n\r\n  private validateStep1(): { \r\n    isValid: boolean; \r\n    errors: string[]; \r\n    data: Partial<IOrderPart1> \r\n  } {\r\n    const addressValid = this.address.length >= 5;\r\n    const paymentValid = this.payment !== null;\r\n    const isValid = addressValid && paymentValid;\r\n\r\n    const errors: string[] = [];\r\n    if (!paymentValid) {\r\n      errors.push('Необходимо выбрать способ оплаты');\r\n    } else if (!addressValid) {\r\n      errors.push('Необходимо указать адрес');\r\n    }\r\n\r\n    return {\r\n      isValid,\r\n      errors,\r\n      data: {\r\n        address: this.address,\r\n        payment: this.payment\r\n      }\r\n    };\r\n  }\r\n\r\n  getFormData(): IOrderPart1 {\r\n    return {\r\n      address: this.address,\r\n      payment: this.payment\r\n    };\r\n  }\r\n}\r\n","import type { IOrderPart1, PaymentMethod } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { Form } from '../components/base/Form';\r\nimport { OrderStep1ValidationModel } from '../models/OrderStep1ValidationModel';\r\n\r\nexport class CheckoutStep1View extends Form<IOrderPart1> {\r\n  private addressInput: HTMLInputElement;\r\n  private paymentCardBtn: HTMLButtonElement;\r\n  private paymentCashBtn: HTMLButtonElement;\r\n  private validationModel: OrderStep1ValidationModel;\r\n\r\n  constructor(events: IEvents) {\r\n    super('order', events);\r\n    this.addressInput = this.root.querySelector('input[name=\"address\"]') as HTMLInputElement;\r\n    this.paymentCardBtn = this.root.querySelector('button[name=\"card\"]') as HTMLButtonElement;\r\n    this.paymentCashBtn = this.root.querySelector('button[name=\"cash\"]') as HTMLButtonElement;\r\n\r\n    this.validationModel = new OrderStep1ValidationModel(this.events);\r\n    \r\n    this.setupPaymentListeners();\r\n  }\r\n\r\n  mount(part: IOrderPart1): HTMLElement {\r\n    this.setInputValue('input[name=\"address\"]', part.address ?? '');\r\n    \r\n    this.initializeValidationModel(part);\r\n    \r\n    this.setActivePayment(part.payment ?? null);\r\n    \r\n    return this.root;\r\n  }\r\n\r\n  private initializeValidationModel(part: IOrderPart1): void {\r\n    this.validationModel.setAddress(part.address ?? '');\r\n    this.validationModel.setPayment(part.payment ?? null);\r\n    \r\n    this.requestValidation();\r\n  }\r\n\r\n  private setupPaymentListeners(): void {\r\n    this.paymentCardBtn.addEventListener('click', () => this.togglePayment('card'));\r\n    this.paymentCashBtn.addEventListener('click', () => this.togglePayment('cash'));\r\n  }\r\n\r\n  private togglePayment(method: Exclude<PaymentMethod, null>): void {\r\n    const current = this.getActivePayment();\r\n    const next = current === method ? null : method;\r\n    this.setActivePayment(next);\r\n    \r\n    this.validationModel.setPayment(next);\r\n  }\r\n\r\n  private setActivePayment(method: PaymentMethod): void {\r\n    this.paymentCardBtn.classList.remove('button_alt-active');\r\n    this.paymentCashBtn.classList.remove('button_alt-active');\r\n    \r\n    if (method === 'card') {\r\n      this.paymentCardBtn.classList.add('button_alt-active');\r\n    } else if (method === 'cash') {\r\n      this.paymentCashBtn.classList.add('button_alt-active');\r\n    }\r\n  }\r\n\r\n  private getActivePayment(): PaymentMethod {\r\n    if (this.paymentCardBtn.classList.contains('button_alt-active')) return 'card';\r\n    if (this.paymentCashBtn.classList.contains('button_alt-active')) return 'cash';\r\n    return null;\r\n  }\r\n\r\n  protected emitFieldChange(fieldName: string, value: string): void {\r\n    if (fieldName === 'address') {\r\n      this.validationModel.setAddress(value);\r\n    }\r\n  }\r\n\r\n  protected requestValidation(): void {\r\n    this.events.emit('form:validate:step1');\r\n  }\r\n  \r\n  protected onSubmit(): void {\r\n    const formData = this.validationModel.getFormData();\r\n    this.events.emit('order:fill-step1', formData);\r\n  }\r\n}","import type { IEvents } from '../components/base/events';\r\nimport type { IOrderPart2 } from '../types';\r\n\r\nexport class ContactValidationModel {\r\n  private email: string = '';\r\n  private phone: string = '';\r\n\r\n  constructor(private events: IEvents) {\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    this.events.on('form:validate:contacts', () => {\r\n      this.validateAndEmit();\r\n    });\r\n  }\r\n\r\n  setEmail(email: string): void {\r\n    this.email = email;\r\n    this.validateAndEmit();\r\n  }\r\n\r\n  setPhone(phone: string): void {\r\n    this.phone = phone;\r\n    this.validateAndEmit();\r\n  }\r\n\r\n  private validateAndEmit(): void {\r\n    const validation = this.validateContacts();\r\n    \r\n    this.events.emit('form:validation:result', {\r\n      isValid: validation.isValid,\r\n      errors: validation.errors,\r\n      data: validation.data\r\n    });\r\n  }\r\n\r\n  private validateContacts(): { \r\n    isValid: boolean; \r\n    errors: string[]; \r\n    data: Partial<IOrderPart2> \r\n  } {\r\n    const emailValid = this.isValidEmail(this.email);\r\n    const phoneValid = this.isValidPhone(this.phone);\r\n    const isValid = emailValid && phoneValid;\r\n\r\n    const errors: string[] = [];\r\n    if (!emailValid && this.email.length > 0) {\r\n      errors.push('Введите корректный email');\r\n    }\r\n    if (!phoneValid && this.phone.length > 0) {\r\n      errors.push('Введите корректный номер телефона');\r\n    }\r\n\r\n    if (this.email.length === 0) {\r\n      errors.push('Введите email');\r\n    }\r\n    if (this.phone.length === 0) {\r\n      errors.push('Введите номер телефона');\r\n    }\r\n\r\n    return {\r\n      isValid,\r\n      errors,\r\n      data: {\r\n        email: this.email,\r\n        phone: this.phone\r\n      }\r\n    };\r\n  }\r\n\r\n  private isValidEmail(email: string): boolean {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  }\r\n\r\n  private isValidPhone(phone: string): boolean {\r\n    return /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(phone);\r\n  }\r\n\r\n  getFormData(): IOrderPart2 {\r\n    return {\r\n      email: this.email,\r\n      phone: this.phone\r\n    };\r\n  }\r\n}\r\n","import type { IOrderPart2 } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { Form } from '../components/base/Form';\r\nimport { ContactValidationModel } from '../models/ContactValidationModel';\r\n\r\nexport class CheckoutStep2View extends Form<IOrderPart2> {\r\n  private emailInput: HTMLInputElement;\r\n  private phoneInput: HTMLInputElement;\r\n  private validationModel: ContactValidationModel;\r\n\r\n  constructor(events: IEvents, private onOrderSubmit: () => void) {\r\n    super('contacts', events);\r\n    this.emailInput = this.root.querySelector('input[name=\"email\"]') as HTMLInputElement;\r\n    this.phoneInput = this.root.querySelector('input[name=\"phone\"]') as HTMLInputElement;\r\n\r\n    this.validationModel = new ContactValidationModel(this.events);\r\n  }\r\n\r\n  mount(part: IOrderPart2): HTMLElement {\r\n    this.setInputValue('input[name=\"email\"]', part.email ?? '');\r\n    this.setInputValue('input[name=\"phone\"]', part.phone ?? '');\r\n    \r\n    this.initializeValidationModel(part);\r\n    \r\n    return this.root;\r\n  }\r\n\r\n  private initializeValidationModel(part: IOrderPart2): void {\r\n    this.validationModel.setEmail(part.email ?? '');\r\n    this.validationModel.setPhone(part.phone ?? '');\r\n    \r\n    this.requestValidation();\r\n  }\r\n\r\n  protected emitFieldChange(fieldName: string, value: string): void {\r\n    if (fieldName === 'email') {\r\n      this.validationModel.setEmail(value);\r\n    } else if (fieldName === 'phone') {\r\n      this.validationModel.setPhone(value);\r\n    }\r\n  }\r\n\r\n  protected requestValidation(): void {\r\n    this.events.emit('form:validate:contacts');\r\n  }\r\n\r\n  protected onSubmit(): void {\r\n    const formData = this.validationModel.getFormData();\r\n    this.events.emit('order:fill-step2', formData);\r\n    this.onOrderSubmit();\r\n  }\r\n}","import { Component } from '../components/base/Component';\r\n\r\nexport class OrderSuccessView extends Component {\r\n  private descEl: HTMLElement;\r\n  private closeBtn: HTMLButtonElement;\r\n\r\n  constructor(private onClose: () => void) {\r\n    super('success');\r\n    this.descEl = this.root.querySelector('.order-success__description')!;\r\n    this.closeBtn = this.root.querySelector('.order-success__close') as HTMLButtonElement;\r\n    \r\n    this.addEventListener('.order-success__close', 'click', () => this.onClose());\r\n  }\r\n\r\n  mount(message: string): HTMLElement {\r\n    this.setTextContent('.order-success__description', message);\r\n    return this.root;\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { EventPayloadMap } from '../types';\r\n\r\nexport class ModalService {\r\n  private root: HTMLElement;\r\n  private content: HTMLElement;\r\n  private closeBtn: HTMLButtonElement;\r\n\r\n  private onBackdrop = (e: MouseEvent) => {\r\n    if (e.target === this.root) this.close();\r\n  };\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = document.querySelector('.modal')!;\r\n    this.content = this.root.querySelector('.modal__content')!;\r\n    this.closeBtn = this.root.querySelector('.modal__close')!;\r\n\r\n    this.root.addEventListener('click', this.onBackdrop);\r\n    this.closeBtn.addEventListener('click', () => this.close());\r\n\r\n    events.on('modal:open', (payload) => {\r\n      const { content } = payload as EventPayloadMap['modal:open'];\r\n      this.open(content);\r\n    });\r\n\r\n    events.on('modal:close', () => this.close());\r\n  }\r\n\r\n  private lockBodyScroll() {\r\n    document.body.style.overflow = 'hidden';\r\n  }\r\n\r\n  private unlockBodyScroll() {\r\n    document.body.style.overflow = '';\r\n  }\r\n\r\n  open(content: HTMLElement) {\r\n    this.content.replaceChildren(content);\r\n    \r\n    if (content.classList.contains('basket')) {\r\n      this.root.classList.add('modal_basket');\r\n    } else {\r\n      this.root.classList.remove('modal_basket');\r\n    }\r\n    \r\n    this.root.classList.add('modal_active');\r\n    this.lockBodyScroll();\r\n  }\r\n\r\n  close() {\r\n    this.root.classList.remove('modal_active', 'modal_basket');\r\n    this.content.replaceChildren();\r\n    this.unlockBodyScroll();\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type {\r\n  IProductApi, IOrderRequest, EventPayloadMap, IOrderPart1, IOrderPart2,\r\n} from '../types';\r\nimport { ShopApi } from '../services/shop-api';\r\nimport { BasketModel } from '../models/basket';\r\nimport { OrderModel } from '../models/order';\r\nimport { MainPageView } from '../views/MainPageView';\r\nimport { ProductModalView } from '../views/ProductModalView';\r\nimport { BasketView } from '../views/BasketView';\r\nimport { CheckoutStep1View } from '../views/CheckoutStep1View';\r\nimport { CheckoutStep2View } from '../views/CheckoutStep2View';\r\nimport { OrderSuccessView } from '../views/OrderSuccessView';\r\nimport { ModalService } from '../services/modal';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class AppController {\r\n  private products: IProductApi[] = [];\r\n  private mainView: MainPageView;\r\n  private basket: BasketModel;\r\n  private order: OrderModel;\r\n  private modal: ModalService;\r\n  private openBasketView: BasketView | null = null;\r\n\r\n  constructor(private api: ShopApi, private events: IEvents, root: HTMLElement) {\r\n    this.basket = new BasketModel(events);\r\n    this.order = new OrderModel(events);\r\n\r\n    this.mainView = new MainPageView(root, events);\r\n    this.modal = new ModalService(events);\r\n\r\n    this.loadProducts();\r\n\r\n    events.on('product:select', ({ id }: EventPayloadMap['product:select']) => {\r\n      const product = this.products.find((p) => p.id === id);\r\n      if (!product) return;\r\n      const view = new ProductModalView(events);\r\n      const content = view.render(product, this.basket.has(id));\r\n      this.openBasketView = null;\r\n      events.emit('modal:open', { content });\r\n    });\r\n\r\n    events.on('basket:open', () => this.openBasket());\r\n\r\n    events.on('basket:add', ({ id }: EventPayloadMap['basket:add']) => {\r\n      const product = this.products.find((p) => p.id === id);\r\n      if (product) this.basket.add(product);\r\n    });\r\n\r\n    events.on('basket:remove', ({ id }: EventPayloadMap['basket:remove']) => {\r\n      this.basket.remove(id);\r\n    });\r\n\r\n    events.on('basket:updated', ({ state }: EventPayloadMap['basket:updated']) => {\r\n      if (this.openBasketView) {\r\n        const content = this.openBasketView.render(state.items, state.total);\r\n        this.modal.open(content);\r\n      }\r\n    });\r\n\r\n    events.on('modal:close', () => (this.openBasketView = null));\r\n\r\n    events.on('order:open-step1', () => {\r\n      const v1 = new CheckoutStep1View(events);\r\n      this.openBasketView = null;\r\n      this.modal.open(v1.mount(this.order.step1));\r\n    });\r\n\r\n    events.on('order:fill-step1', (payload) => {\r\n      const part = payload as IOrderPart1;\r\n      this.order.step1 = { payment: part.payment, address: part.address ?? '' };\r\n      const isValid = part.address?.trim().length > 0 && (part.payment === 'card' || part.payment === 'cash');\r\n      if (isValid) {\r\n        const v2 = new CheckoutStep2View(events, () => this.submitOrder());\r\n        this.modal.open(v2.mount(this.order.step2));\r\n      }\r\n    });\r\n\r\n    events.on('order:fill-step2', (value: IOrderPart2) => {\r\n      this.order.step2 = { email: value.email ?? '', phone: value.phone ?? '' };\r\n      this.submitOrder();\r\n    });\r\n\r\n    events.on('order:success', ({ total }: { total: number }) => {\r\n      this.basket.clear();\r\n      this.order.reset();\r\n      const view = new OrderSuccessView(() => events.emit('modal:close'));\r\n      this.openBasketView = null;\r\n      this.modal.open(view.mount(`Списано ${formatPrice(total)}`));\r\n    });\r\n  }\r\n\r\n  private openBasket() {\r\n    const view = new BasketView(this.events);\r\n    const { items, total } = this.basket.state;\r\n    this.openBasketView = view;\r\n    this.events.emit('modal:open', { content: view.render(items, total) });\r\n  }\r\n\r\n  private async loadProducts() {\r\n    try {\r\n      const res = await this.api.getProducts();\r\n      this.products = res.items;\r\n      this.events.emit('items:change', { items: this.products });\r\n    } catch (e: unknown) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  private async submitOrder() {\r\n    const { items, total } = this.basket.state;\r\n    const req: IOrderRequest = this.order.toRequest(items.map((i) => i.id), total);\r\n    try {\r\n      await this.api.createOrder(req);\r\n      this.events.emit('order:success', { total: req.total });\r\n    } catch (e: unknown) {\r\n      console.error(e);\r\n      this.events.emit('order:success', { total: req.total });\r\n    }\r\n  }\r\n}","import './scss/styles.scss';\r\n\r\nimport { EventEmitter } from './components/base/events';\r\nimport { ShopApi } from './services/shop-api';\r\nimport { AppController } from './controllers/app';\r\n\r\nconst API_ORIGIN = process.env.API_ORIGIN as string;\r\n\r\nconst root = document.querySelector('main.gallery') as HTMLElement;\r\n\r\nconst events = new EventEmitter();\r\nconst api = new ShopApi(API_ORIGIN);\r\nconst app = new AppController(api, events, root);\r\n\r\nevents.emit('app:init');"],"names":["EventEmitter","eventName","callback","data","subscribers","name","context","event","Api","baseUrl","options","uri","init","url","res","error","method","normalizeBase","ShopApi","base","runner","combos","prefix","resource","lastError","e","status","msg","fallbackCatalog","order","BasketModel","events","sum","it","id","product","item","OrderModel","part","items","total","step","errors","cloneTemplate","tpl","setDisabled","btn","disabled","Component","templateId","selector","text","element","display","button","className","condition","handler","attribute","value","input","formatPrice","price","ProductCard","category","categoryClass","categoryEl","src","alt","imageEl","CardView","MainPageView","root","card","productId","payload","state","fragments","ProductModalView","inCart","img","wrap","isPriceless","BasketItemView","index","BasketView","isEmpty","itemViews","idx","Form","validation","OrderStep1ValidationModel","address","payment","addressValid","paymentValid","isValid","CheckoutStep1View","next","fieldName","formData","ContactValidationModel","email","phone","emailValid","phoneValid","CheckoutStep2View","onOrderSubmit","OrderSuccessView","onClose","message","ModalService","content","AppController","api","p","v1","v2","view","req","i","API_ORIGIN"],"mappings":"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"}