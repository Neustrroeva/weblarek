{"version":3,"file":"index-EHxJdv5e.js","sources":["../../src/components/base/events.ts","../../src/components/base/api.ts","../../src/services/shop-api.ts","../../src/models/basket.ts","../../src/models/order.ts","../../src/utils/ui.ts","../../src/utils/format.ts","../../src/views/CardView.ts","../../src/views/MainPageView.ts","../../src/views/ProductModalView.ts","../../src/views/BasketView.ts","../../src/views/CheckoutStep1View.ts","../../src/views/CheckoutStep2View.ts","../../src/views/OrderSuccessView.ts","../../src/services/modal.ts","../../src/controllers/app.ts","../../src/index.ts"],"sourcesContent":["// Хорошая практика даже простые типы выносить в алиасы\r\n// Зато когда захотите поменять это достаточно сделать в одном месте\r\ntype EventName = string | RegExp;\r\ntype Subscriber = Function;\r\ntype EmitterEvent = {\r\n    eventName: string,\r\n    data: unknown\r\n};\r\n\r\nexport interface IEvents {\r\n    on<T extends object>(event: EventName, callback: (data: T) => void): void;\r\n    emit<T extends object>(event: string, data?: T): void;\r\n    trigger<T extends object>(event: string, context?: Partial<T>): (data: T) => void;\r\n}\r\n\r\n/**\r\n * Брокер событий, классическая реализация\r\n * В расширенных вариантах есть возможность подписаться на все события\r\n * или слушать события по шаблону например\r\n */\r\nexport class EventEmitter implements IEvents {\r\n    _events: Map<EventName, Set<Subscriber>>;\r\n\r\n    constructor() {\r\n        this._events = new Map<EventName, Set<Subscriber>>();\r\n    }\r\n\r\n    /**\r\n     * Установить обработчик на событие\r\n     */\r\n    on<T extends object>(eventName: EventName, callback: (event: T) => void) {\r\n        if (!this._events.has(eventName)) {\r\n            this._events.set(eventName, new Set<Subscriber>());\r\n        }\r\n        this._events.get(eventName)?.add(callback);\r\n    }\r\n\r\n    /**\r\n     * Снять обработчик с события\r\n     */\r\n    off(eventName: EventName, callback: Subscriber) {\r\n        if (this._events.has(eventName)) {\r\n            this._events.get(eventName)!.delete(callback);\r\n            if (this._events.get(eventName)?.size === 0) {\r\n                this._events.delete(eventName);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Инициировать событие с данными\r\n     */\r\n    emit<T extends object>(eventName: string, data?: T) {\r\n        this._events.forEach((subscribers, name) => {\r\n            if (name === '*') subscribers.forEach(callback => callback({\r\n                eventName,\r\n                data\r\n            }));\r\n            if (name instanceof RegExp && name.test(eventName) || name === eventName) {\r\n                subscribers.forEach(callback => callback(data));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Слушать все события\r\n     */\r\n    onAll(callback: (event: EmitterEvent) => void) {\r\n        this.on(\"*\", callback);\r\n    }\r\n\r\n    /**\r\n     * Сбросить все обработчики\r\n     */\r\n    offAll() {\r\n        this._events = new Map<string, Set<Subscriber>>();\r\n    }\r\n\r\n    /**\r\n     * Сделать коллбек триггер, генерирующий событие при вызове\r\n     */\r\n    trigger<T extends object>(eventName: string, context?: Partial<T>) {\r\n        return (event: object = {}) => {\r\n            this.emit(eventName, {\r\n                ...(event || {}),\r\n                ...(context || {})\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n","export type ApiListResponse<T> = {\r\n\ttotal: number;\r\n\titems: T[];\r\n};\r\n\r\nexport type ApiPostMethods = 'POST' | 'PUT' | 'DELETE';\r\n\r\nexport class Api {\r\n\treadonly baseUrl: string;\r\n\tprotected options: RequestInit;\r\n\r\n\tconstructor(baseUrl: string, options: RequestInit = {}) {\r\n\t\tthis.baseUrl = baseUrl;\r\n\t\tthis.options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t...((options.headers as object) ?? {}),\r\n\t\t\t},\r\n\t\t\t...options,\r\n\t\t};\r\n\t}\r\n\r\n\tprotected async request<T>(uri: string, init: RequestInit = {}): Promise<T> {\r\n\t\tconst url = this.baseUrl + uri;\r\n\r\n\t\tconst res = await fetch(url, {\r\n\t\t\t...this.options,\r\n\t\t\t...init,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t...(this.options.headers || {}),\r\n\t\t\t\t...(init.headers || {}),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tlet error: any = { status: res.status, statusText: res.statusText };\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await res.json();\r\n\t\t\t\tif (typeof data === 'object') {\r\n\t\t\t\t\terror = { ...error, ...data };\r\n\t\t\t\t}\r\n\t\t\t} catch {}\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tif (res.status === 204) {\r\n\t\t\treturn undefined as unknown as T;\r\n\t\t}\r\n\r\n\t\treturn (await res.json()) as T;\r\n\t}\r\n\r\n\tget<T>(uri: string): Promise<T> {\r\n\t\treturn this.request<T>(uri, { method: 'GET' });\r\n\t}\r\n\r\n\tpost<T>(\r\n\t\turi: string,\r\n\t\tdata?: unknown,\r\n\t\tmethod: ApiPostMethods = 'POST'\r\n\t): Promise<T> {\r\n\t\treturn this.request<T>(uri, {\r\n\t\t\tmethod,\r\n\t\t\tbody: data === undefined ? undefined : JSON.stringify(data),\r\n\t\t});\r\n\t}\r\n}","import { Api, ApiListResponse } from '../components/base/api';\r\nimport type { IOrderRequest, IProductApi } from '../types';\r\nimport fallbackCatalog from '../data/products.json';\r\n\r\ntype Prefix = '' | '/api/weblarek' | '/api' | '/weblarek';\r\ntype Resource = '/products' | '/items' | '/catalog';\r\n\r\nfunction normalizeBase(url: string) {\r\n\treturn url.endsWith('/') ? url.slice(0, -1) : url;\r\n}\r\n\r\nexport class ShopApi extends Api {\r\n\tprivate resolved: { prefix: Prefix; resource: Resource } | null = null;\r\n\r\n\tprivate readonly prefixes: Prefix[];\r\n\tprivate readonly resources: Resource[] = ['/products', '/items', '/catalog'];\r\n\r\n\tconstructor(baseUrl: string, options: RequestInit = {}) {\r\n\t\tconst base = normalizeBase(baseUrl || '');\r\n\t\tsuper(base, options);\r\n\t\tthis.prefixes = base.endsWith('/api/weblarek')\r\n\t\t\t? ['', '/api', '/weblarek']\r\n\t\t\t: ['/api/weblarek', '', '/api', '/weblarek'];\r\n\t}\r\n\r\n\tprivate async tryCombinations<T>(\r\n\t\trunner: (uri: string) => Promise<T>\r\n\t): Promise<{ data: T; prefix: Prefix; resource: Resource }> {\r\n\t\tconst combos = this.resolved\r\n\t\t\t? [this.resolved]\r\n\t\t\t: this.prefixes.flatMap((prefix) =>\r\n\t\t\t\t\tthis.resources.map((resource) => ({ prefix, resource }))\r\n\t\t\t  );\r\n\r\n\t\tlet lastError: unknown;\r\n\r\n\t\tfor (const { prefix, resource } of combos) {\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await runner(`${prefix}${resource}`);\r\n\t\t\t\tthis.resolved = { prefix, resource };\r\n\t\t\t\treturn { data, prefix, resource };\r\n\t\t\t} catch (e: any) {\r\n\t\t\t\tlastError = e;\r\n\t\t\t\tconst status = e?.status ?? e?.code;\r\n\t\t\t\tconst msg = (e?.statusText || e?.message || '')\r\n\t\t\t\t\t.toString()\r\n\t\t\t\t\t.toLowerCase();\r\n\t\t\t\tconst notFound = status === 404 || msg.includes('not found');\r\n\t\t\t\tif (!notFound) throw e;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow lastError ?? new Error('No working API path found');\r\n\t}\r\n\r\n\tasync getProducts(): Promise<ApiListResponse<IProductApi>> {\r\n\t\ttry {\r\n\t\t\tconst { data } = await this.tryCombinations<ApiListResponse<IProductApi>>(\r\n\t\t\t\t(uri) => this.get<ApiListResponse<IProductApi>>(uri)\r\n\t\t\t);\r\n\t\t\treturn data;\r\n\t\t} catch {\r\n\t\t\treturn fallbackCatalog as ApiListResponse<IProductApi>;\r\n\t\t}\r\n\t}\r\n\tcreateOrder(\r\n\t\torder: IOrderRequest\r\n\t): Promise<{ id: string } & { total?: number }> {\r\n\t\tconst prefix = this.resolved?.prefix ?? this.prefixes[0];\r\n\t\treturn this.post<{ id: string } & { total?: number }>(\r\n\t\t\t`${prefix}/orders`,\r\n\t\t\torder,\r\n\t\t\t'POST'\r\n\t\t);\r\n\t}\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { BasketItem, IBasketState, ID, IProductApi } from '../types';\r\n\r\nexport class BasketModel {\r\n  private items: BasketItem[] = [];\r\n\r\n  constructor(private events: IEvents) {}\r\n\r\n  get state(): IBasketState {\r\n    return {\r\n      items: this.items.slice(),\r\n      total: this.items.reduce((sum, it) => sum + (it.price ?? 0), 0),\r\n    };\r\n  }\r\n\r\n  has(id: ID) {\r\n    return this.items.some(it => it.id === id);\r\n  }\r\n\r\n  add(product: IProductApi) {\r\n    if (this.has(product.id)) return;\r\n    const item: BasketItem = { id: product.id, title: product.title, price: product.price };\r\n    this.items.push(item);\r\n    this.emitUpdated();\r\n  }\r\n\r\n  remove(id: ID) {\r\n    this.items = this.items.filter(it => it.id !== id);\r\n    this.emitUpdated();\r\n  }\r\n\r\n  clear() {\r\n    this.items = [];\r\n    this.emitUpdated();\r\n  }\r\n\r\n  private emitUpdated() {\r\n    this.events.emit('basket:updated', { state: this.state });\r\n  }\r\n}","import type { IEvents } from '../components/base/events';\r\nimport type {\r\n  IOrderPart1,\r\n  IOrderPart2,\r\n  IOrderRequest,\r\n  ID,\r\n  IValidationResult,\r\n  FormErrors,\r\n  PaymentMethod\r\n} from '../types';\r\n\r\nexport class OrderModel {\r\n  step1: IOrderPart1 = { payment: null, address: '' };\r\n  step2: IOrderPart2 = { email: '', phone: '' };\r\n\r\n  constructor(private events: IEvents) {}\r\n\r\n  setStep1(part: Partial<IOrderPart1>) {\r\n    this.step1 = { ...this.step1, ...part };\r\n    const res = this.validateStep1();\r\n    this.publishValidation(1, res);\r\n    return res;\r\n  }\r\n\r\n  setStep2(part: Partial<IOrderPart2>) {\r\n    this.step2 = { ...this.step2, ...part };\r\n    const res = this.validateStep2();\r\n    this.publishValidation(2, res);\r\n    return res;\r\n  }\r\n\r\n  toRequest(items: ID[], total: number): IOrderRequest {\r\n    return {\r\n      ...this.step1,\r\n      ...this.step2,\r\n      items,\r\n      total,\r\n    } as IOrderRequest;\r\n  }\r\n\r\n  reset() {\r\n    this.step1 = { payment: null, address: '' };\r\n    this.step2 = { email: '', phone: '' };\r\n  }\r\n\r\n  private publishValidation(step: 1 | 2, res: IValidationResult<IOrderPart1 & IOrderPart2>) {\r\n    this.events.emit('form:errors', { errors: res.errors });\r\n    this.events.emit('form:valid', { step, isValid: res.valid });\r\n  }\r\n\r\n  private validateStep1(): IValidationResult<IOrderPart1 & IOrderPart2> {\r\n    const errors: FormErrors<IOrderPart1 & IOrderPart2> = {};\r\n    if (!this.step1.address?.trim()) errors.address = 'Укажите адрес';\r\n    if (!this.step1.payment) errors.payment = 'Выберите способ оплаты';\r\n    return { valid: Object.keys(errors).length === 0, errors };\r\n  }\r\n\r\n  private validateStep2(): IValidationResult<IOrderPart1 & IOrderPart2> {\r\n    const errors: FormErrors<IOrderPart1 & IOrderPart2> = {};\r\n    if (!this.step2.email?.trim()) errors.email = 'Укажите email';\r\n    if (!this.step2.phone?.trim()) errors.phone = 'Укажите телефон';\r\n    return { valid: Object.keys(errors).length === 0, errors };\r\n  }\r\n}","export function cloneTemplate<T extends HTMLElement = HTMLElement>(id: string): T {\r\n  const tpl = document.getElementById(id) as HTMLTemplateElement | null;\r\n  if (!tpl) throw new Error(`Не найден template#${id}`);\r\n  return tpl.content.firstElementChild!.cloneNode(true) as T;\r\n}\r\n\r\nexport function ensure<T extends Element>(el: T | null, msg: string): T {\r\n  if (!el) throw new Error(msg);\r\n  return el;\r\n}\r\n\r\nexport function setDisabled(btn: HTMLButtonElement, disabled: boolean) {\r\n  btn.toggleAttribute('disabled', disabled);\r\n}","import type { IProductApi } from '../types/index';\r\n\r\nexport function formatPrice(price: IProductApi['price']): string {\r\n  if (price == null) return 'Недоступно';\r\n  return `${new Intl.NumberFormat('ru-RU').format(price)} синапсов`;\r\n}\r\n","import type { IProductApi } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { cloneTemplate } from '../utils/ui';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class CardView {\r\n  readonly root: HTMLElement;\r\n  private productId?: string;\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = cloneTemplate('card-catalog');\r\n    this.root.addEventListener('click', () => {\r\n      if (this.productId) {\r\n        this.events.emit('product:select', { id: this.productId });\r\n      }\r\n    });\r\n  }\r\n\r\n  render(product: IProductApi): HTMLElement {\r\n    this.productId = product.id;\r\n    this.root.querySelector('.card__title')!.textContent = product.title;\r\n    this.root.querySelector('.card__price')!.textContent = formatPrice(product.price);\r\n    \r\n    const categoryEl = this.root.querySelector('.card__category')!;\r\n    categoryEl.textContent = product.category;\r\n    categoryEl.className = `card__category card__category_${this.getCategoryClass(product.category)}`;\r\n    \r\n    const imageEl = this.root.querySelector('.card__image') as HTMLImageElement;\r\n    imageEl.src = product.image;\r\n    imageEl.alt = product.title;\r\n    \r\n    return this.root;\r\n  }\r\n\r\n  private getCategoryClass(category: string): string {\r\n    const categoryMap: Record<string, string> = {\r\n      'софт-скил': 'soft',\r\n      'другое': 'other',\r\n      'дополнительное': 'additional',\r\n      'кнопка': 'button',\r\n      'хард-скил': 'hard'\r\n    };\r\n    return categoryMap[category] || 'other';\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { IProductApi, EventPayloadMap } from '../types';\r\nimport { CardView } from './CardView';\r\n\r\nexport class MainPageView {\r\n  private root: HTMLElement;\r\n  private events: IEvents;\r\n  private listEl: HTMLElement;\r\n  private basketBtn: HTMLButtonElement;\r\n  private counterEl: HTMLElement;\r\n\r\n  constructor(root: HTMLElement, events: IEvents) {\r\n    this.root = root;\r\n    this.events = events;\r\n    this.listEl = root;\r\n    this.basketBtn = document.querySelector('.header__basket') as HTMLButtonElement;\r\n    this.counterEl = document.querySelector('.header__basket-counter') as HTMLElement;\r\n\r\n    this.basketBtn.addEventListener('click', () => this.events.emit('basket:open'));\r\n\r\n    events.on('items:change', (payload) => {\r\n      const { items } = payload as EventPayloadMap['items:change'];\r\n      this.render(items);\r\n    });\r\n\r\n    events.on('basket:updated', (payload) => {\r\n      const { state } = payload as EventPayloadMap['basket:updated'];\r\n      this.counterEl.textContent = String(state.items.length);\r\n    });\r\n  }\r\n\r\n  private render(items: IProductApi[]) {\r\n    const fragments = items.map((p) => new CardView(this.events).render(p));\r\n    this.listEl.replaceChildren(...fragments);\r\n  }\r\n}\r\n","import type { IProductApi } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { cloneTemplate, setDisabled } from '../utils/ui';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class ProductModalView {\r\n  readonly root: HTMLElement;\r\n  private currentProduct: IProductApi | null = null;\r\n  private buyBtn: HTMLButtonElement;\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = cloneTemplate('card-preview');\r\n    this.buyBtn = this.root.querySelector('.card__button') as HTMLButtonElement;\r\n  }\r\n\r\n  render(product: IProductApi, inCart: boolean): HTMLElement {\r\n    this.currentProduct = product;\r\n\r\n    const media = this.root.querySelector('.card__media') as HTMLElement | null;\r\n    if (!media) {\r\n      const img = this.root.querySelector('.card__image') as HTMLImageElement | null;\r\n      if (img) {\r\n        const wrap = document.createElement('div');\r\n        wrap.className = 'card__media';\r\n        img.replaceWith(wrap);\r\n        wrap.appendChild(img);\r\n      }\r\n    }\r\n\r\n    this.root.querySelector('.card__title')!.textContent = product.title;\r\n    this.root.querySelector('.card__price')!.textContent = formatPrice(product.price);\r\n\r\n    const categoryEl = this.root.querySelector('.card__category')!;\r\n    categoryEl.textContent = product.category;\r\n    categoryEl.className = `card__category card__category_${this.getCategoryClass(product.category)}`;\r\n\r\n    const imageEl = this.root.querySelector('.card__image') as HTMLImageElement;\r\n    imageEl.src = product.image;\r\n    imageEl.alt = product.title;\r\n\r\n    const textEl = this.root.querySelector('.card__text') as HTMLElement | null;\r\n    if (textEl) textEl.textContent = product.description || '';\r\n\r\n    const isPriceless = product.price === null;\r\n    if (isPriceless) {\r\n      this.buyBtn.textContent = 'Недоступно';\r\n      setDisabled(this.buyBtn, true);\r\n    } else {\r\n      this.updateButton(inCart);\r\n    }\r\n\r\n    return this.root;\r\n  }\r\n\r\n  private updateButton(inCart: boolean) {\r\n    if (!this.currentProduct) return;\r\n    this.buyBtn.disabled = false;\r\n    this.buyBtn.onclick = null;\r\n\r\n    if (inCart) {\r\n      this.buyBtn.textContent = 'Удалить из корзины';\r\n      this.buyBtn.onclick = () => {\r\n        if (!this.currentProduct) return;\r\n        this.events.emit('basket:remove', { id: this.currentProduct.id });\r\n        this.updateButton(false);\r\n      };\r\n    } else {\r\n      this.buyBtn.textContent = 'Купить';\r\n      this.buyBtn.onclick = () => {\r\n        if (!this.currentProduct) return;\r\n        this.events.emit('basket:add', { id: this.currentProduct.id });\r\n        this.updateButton(true);\r\n      };\r\n    }\r\n  }\r\n\r\n  private getCategoryClass(category: string): string {\r\n    const categoryMap: Record<string, string> = {\r\n      'софт-скил': 'soft',\r\n      'другое': 'other',\r\n      'дополнительное': 'additional',\r\n      'кнопка': 'button',\r\n      'хард-скил': 'hard'\r\n    };\r\n    return categoryMap[category] || 'other';\r\n  }\r\n}\r\n","import type { BasketItem } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { cloneTemplate, setDisabled } from '../utils/ui';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class BasketView {\r\n  readonly root: HTMLElement;\r\n  private listEl: HTMLElement;\r\n  private totalEl: HTMLElement;\r\n  private buttonEl: HTMLButtonElement;\r\n  private emptyEl: HTMLElement;\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = cloneTemplate('basket');\r\n    this.listEl = this.root.querySelector('.basket__list')!;\r\n    this.totalEl = this.root.querySelector('.basket__price')!;\r\n    this.buttonEl = this.root.querySelector('.basket__button') as HTMLButtonElement;\r\n    this.emptyEl = this.root.querySelector('.basket__empty-text') as HTMLElement;\r\n\r\n    this.buttonEl.addEventListener('click', () => this.events.emit('order:open-step1'));\r\n  }\r\n\r\n  render(items: BasketItem[], total: number): HTMLElement {\r\n    const isEmpty = items.length === 0;\r\n\r\n    this.listEl.replaceChildren(\r\n      ...items.map((item, idx) => {\r\n        const tpl = cloneTemplate('card-basket');\r\n        tpl.querySelector('.basket__item-index')!.textContent = String(idx + 1);\r\n        tpl.querySelector('.basket__item-title')!.textContent = item.title;\r\n        tpl.querySelector('.basket__item-price')!.textContent = formatPrice(item.price);\r\n        tpl.querySelector('.basket__item-delete')!.addEventListener('click', () => {\r\n          this.events.emit('basket:remove', { id: item.id });\r\n        });\r\n        return tpl;\r\n      })\r\n    );\r\n\r\n    this.totalEl.textContent = formatPrice(total);\r\n    this.emptyEl.style.display = isEmpty ? 'block' : 'none';\r\n    this.listEl.style.display = isEmpty ? 'none' : 'flex';\r\n    setDisabled(this.buttonEl, isEmpty);\r\n\r\n    return this.root;\r\n  }\r\n}","import type { IOrderPart1, PaymentMethod } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { cloneTemplate, setDisabled } from '../utils/ui';\r\n\r\nexport class CheckoutStep1View {\r\n  readonly root: HTMLElement;\r\n  private addressInput: HTMLInputElement;\r\n  private paymentCardBtn: HTMLButtonElement;\r\n  private paymentCashBtn: HTMLButtonElement;\r\n  private nextBtn: HTMLButtonElement;\r\n  private errorsEl: HTMLElement;\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = cloneTemplate('order');\r\n    this.addressInput = this.root.querySelector('input[name=\"address\"]') as HTMLInputElement;\r\n    this.paymentCardBtn = this.root.querySelector('button[name=\"card\"]') as HTMLButtonElement;\r\n    this.paymentCashBtn = this.root.querySelector('button[name=\"cash\"]') as HTMLButtonElement;\r\n    this.nextBtn = this.root.querySelector('.order__button') as HTMLButtonElement;\r\n    this.errorsEl = this.root.querySelector('.form__errors') as HTMLElement;\r\n\r\n    this.addressInput.addEventListener('input', () => this.validateForm());\r\n    this.paymentCardBtn.addEventListener('click', () => this.togglePayment('card'));\r\n    this.paymentCashBtn.addEventListener('click', () => this.togglePayment('cash'));\r\n\r\n    this.nextBtn.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      this.submitForm();\r\n    });\r\n  }\r\n\r\n  mount(part: IOrderPart1): HTMLElement {\r\n    this.addressInput.value = part.address ?? '';\r\n    this.setActivePayment(part.payment ?? null);\r\n    this.validateForm();\r\n    return this.root;\r\n  }\r\n\r\n  private togglePayment(method: Exclude<PaymentMethod, null>) {\r\n    const current = this.getActivePayment();\r\n    const next = current === method ? null : method;\r\n    this.setActivePayment(next);\r\n    this.validateForm();\r\n  }\r\n\r\n  private setActivePayment(method: PaymentMethod) {\r\n    this.paymentCardBtn.classList.toggle('button_alt-active', method === 'card');\r\n    this.paymentCashBtn.classList.toggle('button_alt-active', method === 'cash');\r\n  }\r\n\r\n  private getActivePayment(): PaymentMethod {\r\n    if (this.paymentCardBtn.classList.contains('button_alt-active')) return 'card';\r\n    if (this.paymentCashBtn.classList.contains('button_alt-active')) return 'cash';\r\n    return null;\r\n  }\r\n\r\n  private validateForm() {\r\n    const address = this.addressInput.value.trim();\r\n    const method = this.getActivePayment();\r\n    const addressValid = address.length >= 5;\r\n    const methodValid = method !== null;\r\n    const isValid = addressValid && methodValid;\r\n\r\n    setDisabled(this.nextBtn, !isValid);\r\n\r\n    if (!methodValid) {\r\n      this.errorsEl.textContent = 'Необходимо выбрать способ оплаты';\r\n    } else if (!addressValid) {\r\n      this.errorsEl.textContent = 'Необходимо указать адрес';\r\n    } else {\r\n      this.errorsEl.textContent = '';\r\n    }\r\n  }\r\n\r\n  private submitForm() {\r\n    const address = this.addressInput.value.trim();\r\n    const method = this.getActivePayment();\r\n\r\n    if (method && address.length >= 5) {\r\n      this.events.emit('order:fill-step1', { payment: method, address });\r\n    } else {\r\n      this.validateForm();\r\n    }\r\n  }\r\n}","import type { IOrderPart2 } from '../types';\r\nimport type { IEvents } from '../components/base/events';\r\nimport { cloneTemplate, setDisabled } from '../utils/ui';\r\n\r\nexport class CheckoutStep2View {\r\n  readonly root: HTMLElement;\r\n  private emailInput: HTMLInputElement;\r\n  private phoneInput: HTMLInputElement;\r\n  private payBtn: HTMLButtonElement;\r\n  private errorsEl: HTMLElement;\r\n\r\n  constructor(private events: IEvents, private onSubmit: () => void) {\r\n    this.root = cloneTemplate('contacts');\r\n\r\n    this.emailInput = this.root.querySelector('input[name=\"email\"]') as HTMLInputElement;\r\n    this.phoneInput = this.root.querySelector('input[name=\"phone\"]') as HTMLInputElement;\r\n    this.payBtn = this.root.querySelector('.button') as HTMLButtonElement;\r\n    this.errorsEl = this.root.querySelector('.form__errors') as HTMLElement;\r\n\r\n    this.emailInput.addEventListener('input', () => this.validateForm());\r\n    this.phoneInput.addEventListener('input', () => this.validateForm());\r\n\r\n    this.payBtn.addEventListener('click', (e: Event) => {\r\n      e.preventDefault();\r\n      this.submitForm();\r\n    });\r\n  }\r\n\r\n  mount(part: IOrderPart2): HTMLElement {\r\n    this.emailInput.value = part.email ?? '';\r\n    this.phoneInput.value = part.phone ?? '';\r\n    this.validateForm();\r\n    return this.root;\r\n  }\r\n\r\n  private validateForm() {\r\n    const email = this.emailInput.value.trim();\r\n    const phone = this.phoneInput.value.trim();\r\n\r\n    const emailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n    const phoneValid = /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(phone);\r\n\r\n    const isValid = emailValid && phoneValid;\r\n    setDisabled(this.payBtn, !isValid);\r\n\r\n    const errors = [];\r\n    if (!emailValid && email.length > 0) errors.push('Введите корректный email');\r\n    if (!phoneValid && phone.length > 0) errors.push('Введите корректный номер телефона');\r\n    this.errorsEl.textContent = errors.join(', ');\r\n  }\r\n\r\n  private submitForm() {\r\n    const email = this.emailInput.value.trim();\r\n    const phone = this.phoneInput.value.trim();\r\n\r\n    const emailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n    const phoneValid = /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(phone);\r\n\r\n    if (emailValid && phoneValid) {\r\n      this.events.emit('order:fill-step2', { email, phone });\r\n      this.onSubmit(); // вызов отправки заказа\r\n    }\r\n  }\r\n}","import { cloneTemplate } from '../utils/ui';\r\n\r\nexport class OrderSuccessView {\r\n  readonly root: HTMLElement;\r\n  private descEl: HTMLElement;\r\n  private closeBtn: HTMLButtonElement;\r\n\r\n  constructor(private onClose: () => void) {\r\n    this.root = cloneTemplate('success');\r\n    this.descEl = this.root.querySelector('.order-success__description')!;\r\n    this.closeBtn = this.root.querySelector('.order-success__close') as HTMLButtonElement;\r\n    this.closeBtn.addEventListener('click', () => this.onClose());\r\n  }\r\n\r\n  mount(message: string): HTMLElement {\r\n    this.descEl.textContent = message;\r\n    return this.root;\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type { EventPayloadMap } from '../types';\r\n\r\nexport class ModalService {\r\n  private root: HTMLElement;\r\n  private content: HTMLElement;\r\n  private closeBtn: HTMLButtonElement;\r\n\r\n  private onBackdrop = (e: MouseEvent) => {\r\n    if (e.target === this.root) this.close();\r\n  };\r\n\r\n  constructor(private events: IEvents) {\r\n    this.root = document.querySelector('.modal')!;\r\n    this.content = this.root.querySelector('.modal__content')!;\r\n    this.closeBtn = this.root.querySelector('.modal__close')!;\r\n\r\n    this.root.addEventListener('click', this.onBackdrop);\r\n    this.closeBtn.addEventListener('click', () => this.close());\r\n\r\n    events.on('modal:open', (payload) => {\r\n      const { content } = payload as EventPayloadMap['modal:open'];\r\n      this.open(content);\r\n    });\r\n\r\n    events.on('modal:close', () => this.close());\r\n  }\r\n\r\n  private lockBodyScroll() {\r\n    document.body.style.overflow = 'hidden';\r\n  }\r\n\r\n  private unlockBodyScroll() {\r\n    document.body.style.overflow = '';\r\n  }\r\n\r\n  open(content: HTMLElement) {\r\n    this.content.replaceChildren(content);\r\n    \r\n    // Определяем тип модалки по содержимому\r\n    if (content.classList.contains('basket')) {\r\n      this.root.classList.add('modal_basket');\r\n    } else {\r\n      this.root.classList.remove('modal_basket');\r\n    }\r\n    \r\n    this.root.classList.add('modal_active');\r\n    this.lockBodyScroll();\r\n  }\r\n\r\n  close() {\r\n    this.root.classList.remove('modal_active', 'modal_basket');\r\n    this.content.replaceChildren();\r\n    this.unlockBodyScroll();\r\n  }\r\n}\r\n","import type { IEvents } from '../components/base/events';\r\nimport type {\r\n  IProductApi, IOrderRequest, EventPayloadMap, IOrderPart1, IOrderPart2,\r\n} from '../types';\r\nimport { ShopApi } from '../services/shop-api';\r\nimport { BasketModel } from '../models/basket';\r\nimport { OrderModel } from '../models/order';\r\nimport { MainPageView } from '../views/MainPageView';\r\nimport { ProductModalView } from '../views/ProductModalView';\r\nimport { BasketView } from '../views/BasketView';\r\nimport { CheckoutStep1View } from '../views/CheckoutStep1View';\r\nimport { CheckoutStep2View } from '../views/CheckoutStep2View';\r\nimport { OrderSuccessView } from '../views/OrderSuccessView';\r\nimport { ModalService } from '../services/modal';\r\nimport { formatPrice } from '../utils/format';\r\n\r\nexport class AppController {\r\n  private products: IProductApi[] = [];\r\n  private mainView: MainPageView;\r\n  private basket: BasketModel;\r\n  private order: OrderModel;\r\n  private modal: ModalService;\r\n  private openBasketView: BasketView | null = null;\r\n\r\n  constructor(private api: ShopApi, private events: IEvents, root: HTMLElement) {\r\n    this.basket = new BasketModel(events);\r\n    this.order = new OrderModel(events);\r\n\r\n    this.mainView = new MainPageView(root, events);\r\n    this.modal = new ModalService(events);\r\n\r\n    this.loadProducts();\r\n\r\n    events.on('product:select', ({ id }: EventPayloadMap['product:select']) => {\r\n      const product = this.products.find((p) => p.id === id);\r\n      if (!product) return;\r\n      const view = new ProductModalView(events);\r\n      const content = view.render(product, this.basket.has(id));\r\n      this.openBasketView = null;\r\n      events.emit('modal:open', { content });\r\n    });\r\n\r\n    events.on('basket:open', () => this.openBasket());\r\n\r\n    events.on('basket:add', ({ id }: EventPayloadMap['basket:add']) => {\r\n      const product = this.products.find((p) => p.id === id);\r\n      if (product) this.basket.add(product);\r\n    });\r\n\r\n    events.on('basket:remove', ({ id }: EventPayloadMap['basket:remove']) => {\r\n      this.basket.remove(id);\r\n    });\r\n\r\n    events.on('basket:updated', ({ state }: EventPayloadMap['basket:updated']) => {\r\n      if (this.openBasketView) {\r\n        const content = this.openBasketView.render(state.items, state.total);\r\n        this.modal.open(content);\r\n      }\r\n    });\r\n\r\n    events.on('modal:close', () => (this.openBasketView = null));\r\n\r\n    events.on('order:open-step1', () => {\r\n      const v1 = new CheckoutStep1View(events);\r\n      this.openBasketView = null;\r\n      this.modal.open(v1.mount(this.order.step1));\r\n    });\r\n\r\n    events.on('order:fill-step1', (payload) => {\r\n      const part = payload as IOrderPart1;\r\n      this.order.step1 = { payment: part.payment, address: part.address ?? '' };\r\n      const isValid = part.address?.trim().length > 0 && (part.payment === 'card' || part.payment === 'cash');\r\n      if (isValid) {\r\n        const v2 = new CheckoutStep2View(events, () => this.submitOrder());\r\n        this.modal.open(v2.mount(this.order.step2));\r\n      }\r\n    });\r\n\r\n    events.on('order:fill-step2', (value: IOrderPart2) => {\r\n      this.order.step2 = { email: value.email ?? '', phone: value.phone ?? '' };\r\n      this.submitOrder();\r\n    });\r\n\r\n    events.on('order:success', ({ total }: { total: number }) => {\r\n      this.basket.clear();\r\n      this.order.reset();\r\n      const view = new OrderSuccessView(() => events.emit('modal:close'));\r\n      this.openBasketView = null;\r\n      this.modal.open(view.mount(`Списано ${formatPrice(total)}`));\r\n    });\r\n  }\r\n\r\n  private openBasket() {\r\n    const view = new BasketView(this.events);\r\n    const { items, total } = this.basket.state;\r\n    this.openBasketView = view;\r\n    this.events.emit('modal:open', { content: view.render(items, total) });\r\n  }\r\n\r\n  private async loadProducts() {\r\n    try {\r\n      const res = await this.api.getProducts();\r\n      this.products = res.items;\r\n      this.events.emit('items:change', { items: this.products });\r\n    } catch (e: unknown) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  private async submitOrder() {\r\n    const { items, total } = this.basket.state;\r\n    const req: IOrderRequest = this.order.toRequest(items.map((i) => i.id), total);\r\n    try {\r\n      await this.api.createOrder(req);\r\n      this.events.emit('order:success', { total: req.total });\r\n    } catch (e: unknown) {\r\n      console.error(e);\r\n      this.events.emit('order:success', { total: req.total });\r\n    }\r\n  }\r\n}","import './scss/styles.scss';\r\n\r\nimport { EventEmitter } from './components/base/events';\r\nimport { ShopApi } from './services/shop-api';\r\nimport { AppController } from './controllers/app';\r\n\r\nconst API_ORIGIN = process.env.API_ORIGIN as string;\r\n\r\nconst root = document.querySelector('main.gallery') as HTMLElement;\r\n\r\nconst events = new EventEmitter();\r\nconst api = new ShopApi(API_ORIGIN);\r\nconst app = new AppController(api, events, root);\r\n\r\nevents.emit('app:init');"],"names":["EventEmitter","eventName","callback","data","subscribers","name","context","event","Api","baseUrl","options","uri","init","url","res","error","method","normalizeBase","ShopApi","base","runner","combos","prefix","resource","lastError","e","status","msg","fallbackCatalog","order","BasketModel","events","sum","it","id","product","item","OrderModel","part","items","total","step","errors","cloneTemplate","tpl","setDisabled","btn","disabled","formatPrice","price","CardView","categoryEl","imageEl","category","MainPageView","root","payload","state","fragments","p","ProductModalView","inCart","img","wrap","textEl","BasketView","isEmpty","idx","CheckoutStep1View","next","address","addressValid","methodValid","isValid","CheckoutStep2View","onSubmit","email","phone","emailValid","phoneValid","OrderSuccessView","onClose","message","ModalService","content","AppController","api","v1","v2","value","view","req","i","API_ORIGIN"],"mappings":"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"}